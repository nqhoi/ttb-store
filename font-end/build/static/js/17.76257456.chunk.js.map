{"version":3,"sources":["apis/orderApi.js","apis/addressApi.js","components/CartView/CartPayment/index.js","containers/AccountPage/UserAddressList/AddressAddForm/index.js","containers/AccountPage/UserAddressList/index.js","containers/PaymentPage/index.js"],"names":["ORDER_API_ENDPOINT","orderApi","getOrderList","userId","url","axiosClient","get","params","getOrderDetails","orderId","postCreateOrder","data","post","getOrderList2","getOrderList3","getOrderDetails2","getOrderDetails3","postCreateOrder2","removeOrder","id","delete","ADDRESS_API_ENDPOINT","addressApi","getProvince","getDistrict","provinceId","getWardStreetList","districtId","district","getDeliveryAddressList","flag","arguments","length","undefined","postAddDeliveryAddress","newAddress","delDeliveryAddress","item","putSetDefaultDeliveryAddress","put","CartPayment","props","carts","isCheckout","transportFee","onCheckout","isLoading","tempPrice","reduce","a","b","price","discount","amount","_jsxs","className","children","_jsx","style","color","helpers","formatProductPrice","fontSize","Button","type","size","loading","onClick","backgroundColor","Link","to","constants","ROUTES","PAYMENT","defaultProps","Option","Select","AddressAddForm","onCloseForm","_useState","useState","_useState2","_slicedToArray","isVisible","setIsVisible","_useState3","_useState4","provinceList","setProvinceList","_useState5","_useState6","districtList","setDistrictList","_useState7","_useState8","wardList","setWardList","_useState9","_useState10","streetList","setStreetList","useRef","formRef","user","useSelector","state","useEffect","isSubscribe","_getProvinceList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","sent","t0","stop","apply","getProvinceList","getDistrictList","_ref","_callee2","_args2","_context2","_ref2","_callee3","_args3","_context3","streets","wards","onAddAddress","_ref3","_callee4","name","phone","rest","sentData","_context4","_objectWithoutProperties","_excluded","address","_objectSpread","_id","status","message","success","error","_x","Modal","visible","closable","maskClosable","onCancel","centered","width","footer","danger","htmlType","form","Form","onFinish","ref","Row","gutter","Col","span","Item","rules","required","max","Input","placeholder","maxLength","validator","_","value","test","Promise","resolve","reject","min","filterOption","input","option","toLowerCase","indexOf","showSearch","onChange","current","resetFields","map","index","prefix","UserAddressList","onChecked","isVisibleForm","setIsVisibleForm","list","setList","activeItem","setActiveItem","updateList","setUpdateList","setIsLoading","onDelDeliveryAdd","onSetDefaultDeliveryAdd","_x2","_Fragment","Spin","tip","height","PlusOutlined","concat","border","disabled","showAddressList","addFlag","getUserDeliveryAdd","_args","abrupt","PaymentPage","dispatch","useDispatch","isAuth","authenticate","note","addressIndex","transport","setTransport","isOrderSuccess","setIsOrderSuccess","TRANSPORT_METHOD_OPTIONS","find","owner","deliveryAdd","transportMethod","orderDate","productList","warn","Date","numOfProd","orderProd","code","paymentMethod","orderStatus","setTimeout","cartReducer","resetCart","Redirect","CART","minHeight","Result","title","subTitle","extra","ACCOUNT","HomeOutlined","borderRadius","lineHeight","md","Radio","Group","defaultValue","e","target","label","TextArea","showCount","allowClear","Card","Meta","avatar","Avatar","shape","src","avt","alt","description","textDecoration","showOrderInfo","LOGIN"],"mappings":"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","file":"static/js/17.76257456.chunk.js","sourcesContent":["import axiosClient from './axiosClient';\r\n\r\nconst ORDER_API_ENDPOINT = '/orders';\r\n\r\nconst orderApi = {\r\n  // api: lấy danh sách đơn hàng\r\n  getOrderList: (userId) => {\r\n    const url = ORDER_API_ENDPOINT + '/list';\r\n    return axiosClient.get(url, { params: { userId } });\r\n  },\r\n\r\n  // api: lấy chi tiết đơn hàng\r\n  getOrderDetails: (orderId) => {\r\n    const url = ORDER_API_ENDPOINT;\r\n    return axiosClient.get(url, { params: { orderId } });\r\n  },\r\n\r\n  // api: tạo đơn hàng\r\n  postCreateOrder: (data) => {\r\n    const url = ORDER_API_ENDPOINT;\r\n    return axiosClient.post(url, data);\r\n  },\r\n   getOrderList2: (userId) => {\r\n    const url = ORDER_API_ENDPOINT + '/list2';\r\n    return axiosClient.get(url, { params: { userId } });\r\n  },\r\n  getOrderList3: (userId) => {\r\n    const url = ORDER_API_ENDPOINT + '/list3';\r\n    return axiosClient.get(url, { params: { userId } });\r\n  },\r\n\r\n  // api: lấy chi tiết đơn hàng\r\n  getOrderDetails2: (orderId) => {\r\n    const url = ORDER_API_ENDPOINT + '/2';\r\n    return axiosClient.get(url, { params: { orderId } });\r\n  },\r\n  getOrderDetails3: (orderId) => {\r\n    const url = ORDER_API_ENDPOINT + '/3';\r\n    return axiosClient.get(url, { params: { orderId } });\r\n  },\r\n\r\n  // api: tạo đơn hàng\r\n  postCreateOrder2: (data) => {\r\n    const url = ORDER_API_ENDPOINT + '/2';\r\n    return axiosClient.post(url, data);\r\n  },\r\n\r\n   // api: xóa đơn hàng\r\n   removeOrder: (id) => {\r\n    const url = ORDER_API_ENDPOINT + '/';\r\n    return axiosClient.delete(url, { params: { id } });\r\n  },\r\n};\r\n\r\nexport default orderApi;\r\n","import axiosClient from \"./axiosClient\";\r\n\r\nconst ADDRESS_API_ENDPOINT = \"/address\";\r\n\r\nconst addressApi = {\r\n  // api: lấy danh sách các tỉnh thành\r\n  getProvince: () => {\r\n    const url = ADDRESS_API_ENDPOINT + \"/province\";\r\n    return axiosClient.get(url);\r\n  },\r\n\r\n  // api: lấy danh sách huyện/quận theo id tỉnh\r\n  getDistrict: (provinceId) => {\r\n    const url = ADDRESS_API_ENDPOINT + \"/district\";\r\n    return axiosClient.get(url, { params: { id: provinceId } });\r\n  },\r\n\r\n  // api: lấy danh sách huyện/quận theo id tỉnh\r\n  getWardStreetList: (provinceId, districtId) => {\r\n    const url = ADDRESS_API_ENDPOINT + \"/street\";\r\n    return axiosClient.get(url, {\r\n      params: { id: provinceId, district: districtId },\r\n    });\r\n  },\r\n\r\n  // api: Lấy danh sách địa chỉ nhận hàng, flag = 1 lấy địa chỉ thô chưa convert sang string\r\n  getDeliveryAddressList: (userId, flag = 0) => {\r\n    const url = ADDRESS_API_ENDPOINT + \"/delivery\";\r\n    return axiosClient.get(url, { params: { userId, flag } });\r\n  },\r\n\r\n  // api: Thêm địa chỉ nhận hàng\r\n  postAddDeliveryAddress: (userId, newAddress) => {\r\n    const url = ADDRESS_API_ENDPOINT + \"/delivery\";\r\n    return axiosClient.post(url, { userId, newAddress });\r\n  },\r\n\r\n  // api: Xoá 1 địa chỉ giao nhận\r\n  delDeliveryAddress: (userId, item) => {\r\n    const url = ADDRESS_API_ENDPOINT + \"/delivery\";\r\n    return axiosClient.delete(url, { params: { userId, item } });\r\n  },\r\n\r\n  // api: sửa mặc định địa chỉ giao\r\n  putSetDefaultDeliveryAddress: (userId, item) => {\r\n    const url = ADDRESS_API_ENDPOINT + \"/delivery\";\r\n    return axiosClient.put(url, null, { params: { userId, item } });\r\n  },\r\n};\r\n\r\nexport default addressApi;\r\n","import helpers from \"helpers\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport constants from \"constants/index\";\r\n\r\nCartPayment.defaultProps = {\r\n  carts: [],\r\n  isCheckout: false, // kiểm tra có phải ở trang checkout để lập đơn hàng hay k\r\n  transportFee: 40000,\r\n  isLoading: false,\r\n};\r\n\r\nfunction CartPayment(props) {\r\n  const { carts, isCheckout, transportFee, onCheckout, isLoading } = props;\r\n\r\n  // giá tạm tính\r\n  const tempPrice = carts.reduce(\r\n    (a, b) => a + (b.price - (b.price * b.discount) / 100) * b.amount,\r\n    0\r\n  );\r\n\r\n  // tổng khuyến mãi\r\n  const totalDiscount = carts.reduce(\r\n    (a, b) => a + ((b.price * b.discount) / 100) * b.amount,\r\n    0\r\n  );\r\n\r\n  return (\r\n    <div className=\"CartPayment bg-white p-16\">\r\n      <h2 className=\"m-b-8\">Thanh toán</h2>\r\n      <div className=\"d-flex justify-content-between m-b-8\">\r\n        <span className=\"font-size-16px\" style={{ color: \"#aaa\" }}>\r\n          Tạm tính\r\n        </span>\r\n        <b>{helpers.formatProductPrice(tempPrice)}</b>\r\n      </div>\r\n      <div className=\"d-flex justify-content-between m-b-8\">\r\n        <span className=\"font-size-16px\" style={{ color: \"#aaa\" }}>\r\n          Phí vận chuyển\r\n        </span>\r\n        <b>{helpers.formatProductPrice(transportFee)}</b>\r\n      </div>\r\n      <div className=\"d-flex justify-content-between m-b-8\">\r\n        <span className=\"font-size-16px\" style={{ color: \"#aaa\" }}>\r\n          Thành tiền\r\n        </span>\r\n        <b style={{ color: \"red\", fontSize: 20 }}>\r\n          {helpers.formatProductPrice(tempPrice + transportFee)}\r\n        </b>\r\n      </div>\r\n      <div className=\"t-end\">\r\n        <span\r\n          style={{ color: \"#aaa\", fontSize: 16 }}\r\n        >{`(Đã bao gồm VAT)`}</span>\r\n      </div>\r\n\r\n      {isCheckout ? (\r\n        <Button\r\n          className=\"m-t-16 d-block m-lr-auto w-100\"\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          loading={isLoading}\r\n          onClick={onCheckout}\r\n          style={{ backgroundColor: \"#3555c5\", color: \"#fff\" }}\r\n        >\r\n          ĐẶT HÀNG NGAY\r\n        </Button>\r\n      ) : (\r\n        <Link to={constants.ROUTES.PAYMENT}>\r\n          <Button\r\n            className=\"m-t-16 d-block m-lr-auto w-100\"\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            style={{ backgroundColor: \"#3555c5\", color: \"#fff\" }}\r\n          >\r\n            THANH TOÁN\r\n          </Button>\r\n        </Link>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nCartPayment.propTypes = {\r\n  carts: PropTypes.array,\r\n  isCheckout: PropTypes.bool,\r\n  transportFee: PropTypes.number,\r\n  onCheckout: PropTypes.func,\r\n  isLoading: PropTypes.bool,\r\n};\r\n\r\nexport default CartPayment;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport addressApi from \"apis/addressApi\";\r\nimport { Button, Col, Form, Input, message, Modal, Row, Select } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst { Option } = Select;\r\n\r\nfunction AddressAddForm(props) {\r\n  const { onCloseForm } = props;\r\n  const [isVisible, setIsVisible] = useState(true);\r\n  const [provinceList, setProvinceList] = useState([]);\r\n  const [districtList, setDistrictList] = useState([]);\r\n  const [wardList, setWardList] = useState([]);\r\n  const [streetList, setStreetList] = useState([]);\r\n  const provinceId = useRef(\"\");\r\n  const formRef = useRef(null);\r\n  const user = useSelector((state) => state.user);\r\n\r\n  // : lấy danh sách tỉnh thành\r\n  useEffect(() => {\r\n    let isSubscribe = true;\r\n\r\n    async function getProvinceList() {\r\n      try {\r\n        const response = await addressApi.getProvince();\r\n        if (response) {\r\n          if (isSubscribe) setProvinceList(response.data);\r\n        }\r\n      } catch (error) {}\r\n    }\r\n    getProvinceList();\r\n\r\n    return () => (isSubscribe = false);\r\n  }, []);\r\n\r\n  // : lấy danh sách huyện/xã khi đã chọn tỉnh/thành\r\n  const getDistrictList = async (provinceId = 0) => {\r\n    try {\r\n      const response = await addressApi.getDistrict(provinceId);\r\n      if (response) {\r\n        setDistrictList(response.data);\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // : lấy danh sách huyện/xã khi đã chọn tỉnh/thành\r\n  const getWardStreetList = async (provinceId = 0, districtId) => {\r\n    try {\r\n      const response = await addressApi.getWardStreetList(\r\n        provinceId,\r\n        districtId\r\n      );\r\n      if (response) {\r\n        setStreetList(response.data.streets);\r\n        setWardList(response.data.wards);\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // event: thêm địa chỉ\r\n  const onAddAddress = async (newAddress) => {\r\n    try {\r\n      const { name, phone, ...rest } = newAddress;\r\n      const sentData = { name, phone, address: { ...rest } };\r\n      const userId = user._id;\r\n      const response = await addressApi.postAddDeliveryAddress(\r\n        userId,\r\n        sentData\r\n      );\r\n      if (response && response.status === 200) {\r\n        message.success(\"Thêm địa chỉ thành công\", 2);\r\n      }\r\n    } catch (error) {\r\n      if (error) {\r\n        if (error.response) message.error(error.response.data.message, 2);\r\n        else message.error(\"Thêm địa chỉ thất bại\", 2);\r\n      }\r\n    }\r\n    setIsVisible(false);\r\n    onCloseForm(1);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      visible={isVisible}\r\n      closable={true}\r\n      maskClosable={false}\r\n      onCancel={() => {\r\n        setIsVisible(false);\r\n        onCloseForm();\r\n      }}\r\n      centered\r\n      width={768}\r\n      footer={[\r\n        <Button\r\n          key=\"back\"\r\n          danger\r\n          onClick={() => {\r\n            setIsVisible(false);\r\n            onCloseForm();\r\n          }}\r\n        >\r\n          Hủy bỏ\r\n        </Button>,\r\n        <Button key=\"submit\" type=\"primary\" htmlType=\"submit\" form=\"form\">\r\n          Thêm địa chỉ\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <Form name=\"form\" onFinish={onAddAddress} ref={formRef}>\r\n        <Row gutter={[32, 0]}>\r\n          <Col span={12}>\r\n            <h3>Thông tin nhận hàng</h3>\r\n            <Form.Item\r\n              name=\"name\"\r\n              className=\"m-tb-12\"\r\n              rules={[\r\n                { required: true, message: \"Bắt buộc nhập *\" },\r\n                {\r\n                  max: 40,\r\n                  message: \"Tối đa 40 ký tự\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input size=\"middle\" placeholder=\"Họ Tên *\" maxLength={60} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"phone\"\r\n              rules={[\r\n                { required: true, message: \"Bắt buộc nhập *\" },\r\n                {\r\n                  validator: (_, value) =>\r\n                    /0\\d{0,9}/gi.test(value)\r\n                      ? Promise.resolve()\r\n                      : Promise.reject(\"Số điện thoại không hợp lệ\"),\r\n                },\r\n                {\r\n                  max: 10,\r\n                  message: \"Số điện thoại bao gồm 10 số\",\r\n                },\r\n                {\r\n                  min: 10,\r\n                  message: \"Số điện thoại bao gồm 10 số\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                size=\"middle\"\r\n                placeholder=\"Số điện thoại *\"\r\n                maxLength={12}\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <h3>Địa chỉ giao hàng</h3>\r\n            {/* tỉnh thành */}\r\n            <Form.Item\r\n              name=\"province\"\r\n              rules={[{ required: true, message: \"Bắt buộc nhập *\" }]}\r\n            >\r\n              <Select\r\n                filterOption={(input, option) =>\r\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                  0\r\n                }\r\n                showSearch\r\n                onChange={(value) => {\r\n                  getDistrictList(value);\r\n                  provinceId.current = value;\r\n                  formRef.current.resetFields([\"district\", \"wards\", \"street\"]);\r\n                }}\r\n                placeholder=\"Tỉnh/thành\"\r\n                className=\"m-tb-12\"\r\n                size=\"middle\"\r\n              >\r\n                {provinceList.map((item, index) => (\r\n                  <Option value={item.id} key={index}>\r\n                    {item.name}\r\n                  </Option>\r\n                ))}\r\n                {/* {provinceList.map((item, index) => (\r\n                  <Option value={item.ID} key={index}>\r\n                     {item.Title}\r\n                  </Option>\r\n                ))} */}\r\n              </Select>\r\n            </Form.Item>\r\n            {/* huyễn/ quận */}\r\n            <Form.Item\r\n              name=\"district\"\r\n              rules={[{ required: true, message: \"Bắt buộc nhập *\" }]}\r\n            >\r\n              <Select\r\n                filterOption={(input, option) =>\r\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                  0\r\n                }\r\n                showSearch\r\n                onChange={(value) =>\r\n                  getWardStreetList(provinceId.current, value)\r\n                }\r\n                placeholder=\"Huyện/Quận\"\r\n                size=\"middle\"\r\n                className=\"m-tb-12\"\r\n              >\r\n                {districtList.map((item, index) => (\r\n                  <Option value={item.id} key={index}>\r\n                    {item.name}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n            {/* phường, xã */}\r\n            <Form.Item\r\n              name=\"wards\"\r\n              rules={[{ required: true, message: \"Bắt buộc nhập *\" }]}\r\n            >\r\n              <Select\r\n                filterOption={(input, option) =>\r\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                  0\r\n                }\r\n                showSearch\r\n                onChange={(value) =>\r\n                  getWardStreetList(provinceId.current, value)\r\n                }\r\n                className=\"m-tb-12\"\r\n                placeholder=\"Phường/Xã\"\r\n                size=\"middle\"\r\n              >\r\n                {wardList.map((item, index) => (\r\n                  <Option value={item.id} key={index}>\r\n                    {item.prefix + \" \" + item.name}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n            {/* đường */}\r\n            <Form.Item\r\n              name=\"street\"\r\n              rules={[{ required: true, message: \"Bắt buộc nhập *\" }]}\r\n            >\r\n              <Select\r\n                filterOption={(input, option) =>\r\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                  0\r\n                }\r\n                showSearch\r\n                onChange={(value) =>\r\n                  getWardStreetList(provinceId.current, value)\r\n                }\r\n                className=\"m-tb-12\"\r\n                placeholder=\"Đường\"\r\n                size=\"middle\"\r\n              >\r\n                {streetList.map((item, index) => (\r\n                  <Option value={item.id} key={index}>\r\n                    {item.prefix + \" \" + item.name}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n            {/* chi tiết */}\r\n            <Form.Item\r\n              name=\"details\"\r\n              rules={[{ required: true, message: \"* bắt buộc nhập\" }]}\r\n            >\r\n              <Input\r\n                className=\"m-t-12\"\r\n                maxLength={100}\r\n                placeholder=\"Số nhà cụ thể\"\r\n                size=\"middle\"\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nAddressAddForm.propTypes = {\r\n  onCloseForm: PropTypes.func,\r\n};\r\n\r\nexport default AddressAddForm;\r\n","import { Button, message, Spin } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport addressApi from \"apis/addressApi\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport AddressAddForm from \"./AddressAddForm\";\r\n\r\nUserAddressList.defaultProps = {\r\n  isCheckout: false,\r\n  onChecked: function () {},\r\n};\r\n\r\nfunction UserAddressList(props) {\r\n  const { isCheckout, onChecked } = props;\r\n  const user = useSelector((state) => state.user);\r\n  const [isVisibleForm, setIsVisibleForm] = useState(false);\r\n  const [list, setList] = useState([]);\r\n  const [activeItem, setActiveItem] = useState(-1);\r\n  const [updateList, setUpdateList] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // : xoá 1 địa chỉ giao nhận\r\n  const onDelDeliveryAdd = async (item) => {\r\n    try {\r\n      const response = await addressApi.delDeliveryAddress(user._id, item);\r\n      if (response) {\r\n        message.success(\"Xóa địa chỉ thành Công.\");\r\n        setUpdateList(!updateList);\r\n      }\r\n    } catch (error) {\r\n      message.error(\"Xoá địa chỉ giao, nhận thất bại.\");\r\n    }\r\n  };\r\n\r\n  // event: đặt mặc định\r\n  const onSetDefaultDeliveryAdd = async (item) => {\r\n    try {\r\n      const response = await addressApi.putSetDefaultDeliveryAddress(\r\n        user._id,\r\n        item\r\n      );\r\n      if (response) {\r\n        message.success(\"Cập nhật thành công\");\r\n        setUpdateList(!updateList);\r\n      }\r\n    } catch (error) {\r\n      message.error(\"Cập nhật thất bại.\");\r\n    }\r\n  };\r\n\r\n  // : hiển thị danh sách\r\n  const showAddressList = (list = []) => {\r\n    return (\r\n      list &&\r\n      list.map((item, index) => (\r\n        <div\r\n          key={index}\r\n          className={`bg-white bor-rad-8 box-sha-home p-tb-8 p-lr-16 m-b-16 ${\r\n            activeItem === index && isCheckout ? \"item-active\" : \"\"\r\n          }`}\r\n          onClick={() => {\r\n            if (isCheckout) {\r\n              setActiveItem(index);\r\n              onChecked(index);\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"d-flex justify-content-between m-b-4\">\r\n            <h3>\r\n              <b>{item.name}</b>\r\n              {index === 0 && !isCheckout && (\r\n                <span\r\n                  className=\"font-size-12px p-tb-4 p-lr-8 m-l-8 bor-rad-4\"\r\n                  style={{ border: \"solid 1px #3a5dd9\", color: \"#3a5dd9\" }}\r\n                >\r\n                  Mặc định\r\n                </span>\r\n              )}\r\n            </h3>\r\n\r\n            {index !== 0 && !isCheckout && (\r\n              <div>\r\n                <Button\r\n                  type=\"link\"\r\n                  onClick={() => onSetDefaultDeliveryAdd(index)}\r\n                >\r\n                  Đặt mặc định\r\n                </Button>\r\n                <Button\r\n                  type=\"dashed\"\r\n                  disabled={index === 0}\r\n                  onClick={() => onDelDeliveryAdd(index)}\r\n                >\r\n                  Xóa\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <p className=\"m-b-4\">\r\n            <b>Địa chỉ: </b> {item.address}\r\n          </p>\r\n          <p className=\"m-b-4\">\r\n            <b>Số điện thoại: </b> {item.phone}\r\n          </p>\r\n        </div>\r\n      ))\r\n    );\r\n  };\r\n\r\n  // : Lấy danh sách địa chỉ\r\n  useEffect(() => {\r\n    let isSubscribe = true;\r\n    const getDeliveryAddressList = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await addressApi.getDeliveryAddressList(user._id);\r\n        if (response && isSubscribe) {\r\n          setList(response.data.list);\r\n          setIsLoading(false);\r\n        }\r\n      } catch (error) {\r\n        if (isSubscribe) {\r\n          setList([]);\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    if (user) getDeliveryAddressList();\r\n\r\n    return () => (isSubscribe = false);\r\n  }, [user, updateList]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <div className=\"t-center m-tb-50\">\r\n          <Spin tip=\"Đang tải danh sách địa chỉ giao hàng ...\" size=\"large\" />\r\n        </div>\r\n      ) : (\r\n        <div className=\"AddressUserList\">\r\n          {/* thêm địa chỉ, chỉ cho tối đa 5 địa chỉ */}\r\n          {list.length < 5 && (\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"large\"\r\n              className=\"w-100\"\r\n              onClick={() => setIsVisibleForm(true)}\r\n              style={{ height: 54 }}\r\n            >\r\n              <PlusOutlined />\r\n              Thêm địa chỉ\r\n            </Button>\r\n          )}\r\n          {/* hiện danh sách địa chỉ */}\r\n          {list.length > 0 ? (\r\n            <div className=\"m-t-16\">{showAddressList(list)}</div>\r\n          ) : (\r\n            <div className=\"m-t-16 t-center\">\r\n              Hiện tại bạn chưa có địa chỉ giao, nhận hàng\r\n            </div>\r\n          )}\r\n          {isVisibleForm && (\r\n            <AddressAddForm\r\n              onCloseForm={(addFlag) => {\r\n                //Cờ báo thêm mới địa chỉ thành công để cập nhật lại địa chỉ\r\n                if (addFlag) setUpdateList(!updateList);\r\n                setIsVisibleForm(false);\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nUserAddressList.propTypes = {\r\n  isCheckout: PropTypes.bool,\r\n  onChecked: PropTypes.func,\r\n};\r\nexport default UserAddressList;\r\n","import React from \"react\";\r\nimport { HomeOutlined } from \"@ant-design/icons\";\r\nimport addressApi from \"apis/addressApi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport constants from \"constants/index\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Input,\r\n  message,\r\n  Radio,\r\n  Result,\r\n  Row,\r\n} from \"antd\";\r\nimport helpers from \"helpers\";\r\nimport orderApi from \"apis/orderApi\";\r\nimport cartReducer from \"reducers/cart\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserAddressList from \"containers/AccountPage/UserAddressList\";\r\nimport CartPayment from \"components/CartView/CartPayment\";\r\nimport vnpayApi from \"apis/vnpay\";\r\n\r\n// : Lấy địa chỉ giao hàng của user theo index\r\nconst getUserDeliveryAdd = async (userId, index = 0) => {\r\n  try {\r\n    const response = await addressApi.getDeliveryAddressList(userId, 1);\r\n    if (response) {\r\n      return response.data.list[index];\r\n    }\r\n    return null;\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n};\r\n\r\nfunction PaymentPage() {\r\n  const dispatch = useDispatch();\r\n  const isAuth = useSelector((state) => state.authenticate.isAuth);\r\n  const carts = useSelector((state) => state.carts);\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const note = useRef(\"\");\r\n  const addressIndex = useRef(-1);\r\n  const [transport, setTransport] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isOrderSuccess, setIsOrderSuccess] = useState(false);\r\n\r\n  // giá tạm tính\r\n  const tempPrice = carts.reduce(\r\n    (a, b) => a + (b.price - (b.price * b.discount) / 100) * b.amount,\r\n    0\r\n  );\r\n\r\n  // phi vận chuyển: <1000000 =0\r\n  const transportFee = constants.TRANSPORT_METHOD_OPTIONS.find(\r\n    (item) => item.value === transport\r\n  ).price;\r\n\r\n  // : hiển thị danh sách đơn hàng\r\n  const showOrderInfo = (carts) => {\r\n    return carts.map((item, index) => (\r\n      <Card key={index}>\r\n        <Card.Meta\r\n          avatar={\r\n            <Avatar size={48} shape=\"square\" src={item.avt} alt=\"Photo\" />\r\n          }\r\n          title={item.name}\r\n          description={\r\n            <>\r\n              <span>{`Số lượng: ${item.amount}`}</span>\r\n              <p\r\n                className=\"font-size-16px font-weight-700 m-b-0\"\r\n                style={{ color: \"#3555C5\" }}\r\n              >\r\n                {helpers.formatProductPrice(\r\n                  (item.price - (item.price * item.discount) / 100) *\r\n                    item.amount\r\n                )}\r\n              </p>\r\n              {item.discount > 0 && (\r\n                <>\r\n                  <p\r\n                    className=\"font-size-12px font-weight-700\"\r\n                    style={{ textDecoration: \"line-through\", color: \"#aaa\" }}\r\n                  >\r\n                    {helpers.formatProductPrice(item.price)}\r\n                  </p>\r\n                </>\r\n              )}\r\n            </>\r\n          }\r\n        />\r\n      </Card>\r\n    ));\r\n  };\r\n\r\n  // : đặt hàng\r\n  const onCheckout = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const owner = user._id;\r\n      if (addressIndex.current === -1) {\r\n        message.warn(\"Vui lòng chọn địa chỉ giao hàng\");\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n      const deliveryAdd = await getUserDeliveryAdd(owner, addressIndex.current);\r\n      const paymentMethod = 0,\r\n        orderStatus = 0,\r\n        transportMethod = transport;\r\n      const orderDate = new Date();\r\n      const productList = carts.map((item, index) => {\r\n        const { amount, code, name, price, discount, _id } = item;\r\n        return {\r\n          numOfProd: amount,\r\n          orderProd: {code, name, price, discount, id: _id },\r\n        };\r\n      });\r\n      const response = await orderApi.postCreateOrder2({\r\n        owner,\r\n        deliveryAdd,\r\n        paymentMethod,\r\n        orderStatus,\r\n        transportMethod,\r\n        transportFee,\r\n        orderDate,\r\n        productList,\r\n        note: note.current,\r\n      });\r\n      if (response && response.status === 200) {\r\n        setTimeout(() => {\r\n          message.success(\"Đặt hàng thành công\", 2);\r\n          setIsLoading(false);\r\n          setIsOrderSuccess(true);\r\n          dispatch(cartReducer.resetCart());\r\n        }, 1000);\r\n      }\r\n    } catch (error) {\r\n      message.error(\"Đặt hàng thất bại, thử lại\", 3);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const vnpayCheckout = async() => {\r\n    const response = await vnpayApi.vnpayCheckout()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {carts.length <= 0 && !isOrderSuccess && (\r\n        <Redirect to={constants.ROUTES.CART} />\r\n      )}\r\n      {isAuth ? (\r\n        <div className=\"container m-tb-32\" style={{ minHeight: \"100vh\" }}>\r\n          {isOrderSuccess ? (\r\n            <Result\r\n              status=\"success\"\r\n              title=\"Đơn hàng của bạn đã đặt thành công.\"\r\n              subTitle=\"Xem chi tiết đơn hàng vừa rồi, thông báo xác nhận đợn hàng đã được tởi gmail của Anh/chị\"\r\n              extra={[\r\n                <Button type=\"default\" key=\"0\">\r\n                  <Link to={constants.ROUTES.ACCOUNT + \"/orders\"}>\r\n                    Xem chi tiết đơn hàng\r\n                  </Link>\r\n                </Button>,\r\n                <Button type=\"primary\" key=\"1\">\r\n                  <Link to=\"/\">Tiếp tục mua sắm</Link>\r\n                </Button>,\r\n              ]}\r\n            />\r\n          ) : (\r\n            <Row gutter={[16, 16]}>\r\n              {/* Đường dẫn */}\r\n              <Col span={24} className=\"d-flex page-position\">\r\n                <Link to=\"/\">\r\n                  <HomeOutlined\r\n                    className=\"p-12 icom-home font-size-16px bg-white\"\r\n                    style={{ borderRadius: 50 }}\r\n                  />\r\n                </Link>\r\n                <span\r\n                  className=\"p-lr-8 font-weight-500\"\r\n                  style={{ lineHeight: \"40px\" }}\r\n                >\r\n                  {`>`}\r\n                </span>\r\n                <span\r\n                  className=\"p-8 font-weight-500 bg-white\"\r\n                  style={{ borderRadius: 50 }}\r\n                >\r\n                  Tiến hành thanh toán\r\n                </span>\r\n              </Col>\r\n\r\n              {/* Thông tin giao hàng  */}\r\n              <Col span={24} md={16}>\r\n                {/* địa chỉ giao nhận, cách thức giao */}\r\n                <div className=\"p-12 bg-white bor-rad-8 m-tb-16\">\r\n                  <h2>Thông tin giao hàng</h2>\r\n                  <Radio.Group\r\n                    defaultValue={transport}\r\n                    onChange={(e) => setTransport(e.target.value)}\r\n                    className=\"m-tb-8\"\r\n                  >\r\n                    {constants.TRANSPORT_METHOD_OPTIONS.map((item, index) => (\r\n                      <Radio key={index} value={item.value}>\r\n                        {item.label}\r\n                      </Radio>\r\n                    ))}\r\n                  </Radio.Group>\r\n                  <UserAddressList\r\n                    isCheckout={true}\r\n                    onChecked={(value) => (addressIndex.current = value)}\r\n                  />\r\n                </div>\r\n\r\n                {/* ghi chú */}\r\n                <div className=\"p-12 bg-white bor-rad-8\">\r\n                  <h2 className=\"m-b-8\">Ghi chú cho đơn hàng</h2>\r\n                  <Input.TextArea\r\n                    placeholder=\"Nhập thông tin cần ghi chú \"\r\n                    maxLength={200}\r\n                    showCount\r\n                    allowClear\r\n                    onChange={(value) => (note.current = value.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                {/* phương thức thanh toán */}\r\n                <div className=\"p-12 bgPlate bor-rad-8 m-tb-16\">\r\n                  <h2 className=\"m-b-8\">Phương thức thanh toán</h2>\r\n                  <p>Thông tin thanh toán của bạn sẽ luôn được bảo mật</p>\r\n                  <Row gutter={[16, 16]}>\r\n                    <Col span={24} md={12}>\r\n                      <div className=\"bg-gray item-active p-tb-8 p-lr-16\">\r\n                        <b className=\"font-size-16px\">\r\n                          Thanh toán khi nhận hàng\r\n                        </b>\r\n                        <p>\r\n                          Thanh toán bằng tiền mặt khi nhận hàng tại nhà hoặc\r\n                          showroom.\r\n                        </p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col\r\n                      span={24} md={12}\r\n                      onClick={() =>\r\n                        message.warn(\r\n                          \"Tính năng đang được cập nhật. Rất xin lỗi quý khách vì sự bất tiện này\",\r\n                          3\r\n                        )\r\n                      }\r\n\r\n                      // onClick={vnpayCheckout}\r\n                    >\r\n                      <div className=\"bg-gray p-tb-8 p-lr-16\">\r\n                        <b className=\"font-size-16px\">\r\n                          Thanh toán Online qua cổng VNPAY\r\n                        </b>\r\n                        <p>\r\n                          Thanh toán qua Internet Banking, Visa, Master, JCB,\r\n                          VNPAY-QR.\r\n                        </p>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Col>\r\n\r\n              {/* đặt hàng */}\r\n              <Col span={24} md={8}>\r\n                {/* thông tin đơn hàng */}\r\n                <div className=\"bg-white p-12 bor-rad-8 m-tb-16\">\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <h2>Thông tin đơn hàng</h2>\r\n                    <Button type=\"link\" size=\"large\">\r\n                      <Link to={constants.ROUTES.CART}>Chỉnh sửa</Link>\r\n                    </Button>\r\n                  </div>\r\n                  <div>{showOrderInfo(carts)}</div>\r\n                </div>\r\n\r\n                {/* tiến hành đặt hàng */}\r\n                <div className=\"bg-white\">\r\n                  <CartPayment\r\n                    isLoading={isLoading}\r\n                    carts={carts}\r\n                    isCheckout={true}\r\n                    transportFee={transportFee}\r\n                    onCheckout={onCheckout}\r\n                  />\r\n                  <div className=\"t-center p-b-16\">\r\n                    <span\r\n                      style={{\r\n                        color: \"#ff5000\",\r\n                      }}\r\n                    >{`(Xin vui lòng kiểm tra lại đơn hàng trước khi đặt mua)`}</span>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Redirect to={constants.ROUTES.LOGIN} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PaymentPage;\r\n"],"sourceRoot":""}