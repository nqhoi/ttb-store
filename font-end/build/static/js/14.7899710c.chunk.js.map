{"version":3,"sources":["components/Custom/InputField/index.js","apis/accountApi.js","components/Delay/index.js","../node_modules/@ant-design/icons-svg/es/asn/EyeTwoTone.js","../node_modules/@ant-design/icons/es/icons/EyeTwoTone.js","containers/Login/ForgotPassword/index.js"],"names":["InputField","props","field","form","type","placeholder","size","suffix","className","autocomplete","autofocus","ref","maxLength","rest","_objectWithoutProperties","_excluded","name","errors","touched","showError","InputOption","Input","Password","_jsxs","_Fragment","children","_jsx","_objectSpread","autoComplete","autoFocus","defaultProps","ACCOUNT_API_ENDPOINT","accountApi","postSendVerifyCode","email","url","axiosClient","post","postSignUp","account","postSendCodeForgotPW","postResetPassword","Delay","wait","_useState","useState","_useState2","_slicedToArray","waiting","setWaiting","useEffect","timer","setTimeout","clearTimeout","propTypes","PropTypes","number","EyeTwoTone","primaryColor","secondaryColor","React","AntdIcon","icon","EyeTwoToneSvg","displayName","ForgotPassword","isSubmitting","setIsSubmitting","_useState3","_useState4","isSuccess","setIsSuccess","_useState5","_useState6","isSending","setIsSending","emailRef","useRef","onSendCode","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","current","test","message","error","abrupt","sent","status","success","t0","response","data","stop","apply","arguments","onChangePassword","_ref2","_callee2","_context2","_x","validationSchema","Yup","shape","trim","required","password","min","max","matches","verifyCode","length","constants","MAX_VERIFY_CODE","concat","DELAY_TIME","Redirect","to","ROUTES","LOGIN","Formik","initialValues","onSubmit","formikProps","values","suffixColor","Form","Row","gutter","justify","style","marginLeft","marginRight","Col","span","FastField","component","Tooltip","title","InfoCircleOutlined","color","iconRender","visible","EyeInvisibleOutlined","Button","onClick","loading","htmlType","Link","SIGNUP"],"mappings":"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","file":"static/js/14.7899710c.chunk.js","sourcesContent":["import { Input } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nInputField.defaultProps = {\r\n  type: \"text\",\r\n  placeholder: \"\",\r\n  size: \"large\",\r\n  suffix: null,\r\n  autocomplete: \"on\",\r\n  autofocus: false,\r\n  maxLength: 1000,\r\n};\r\n\r\nfunction InputField(props) {\r\n  const {\r\n    field,\r\n    form,\r\n    type,\r\n    placeholder,\r\n    size,\r\n    suffix,\r\n    className,\r\n    autocomplete,\r\n    autofocus,\r\n    ref,\r\n    maxLength,\r\n    ...rest\r\n  } = props;\r\n  const { name } = field;\r\n  const { errors, touched } = form;\r\n  const showError = errors[name] && touched[name];\r\n  //Input or Input.Password\r\n  const InputOption = type === \"password\" ? Input.Password : Input;\r\n  return (\r\n    <>\r\n      <InputOption\r\n        ref={ref}\r\n        className={showError ? className + \" error-input\" : className}\r\n        name={name}\r\n        {...field}\r\n        {...rest}\r\n        placeholder={placeholder}\r\n        size={size}\r\n        suffix={suffix}\r\n        autoComplete={autocomplete}\r\n        maxLength={maxLength}\r\n        autoFocus={autofocus}\r\n      />\r\n      {showError && <div className=\"show-error-input\">{errors[name]}</div>}\r\n    </>\r\n  );\r\n}\r\n\r\nInputField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  type: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  size: PropTypes.string,\r\n  suffix: PropTypes.object,\r\n  autocomplete: PropTypes.string,\r\n  autofocus: PropTypes.bool,\r\n  ref: PropTypes.any,\r\n  maxLength: PropTypes.number,\r\n};\r\n\r\nexport default InputField;\r\n","import axiosClient from './axiosClient';\r\n\r\nconst ACCOUNT_API_ENDPOINT = '/accounts';\r\n\r\nconst accountApi = {\r\n  // fn: gửi mã xác nhận\r\n  postSendVerifyCode: (email) => {\r\n    const url = ACCOUNT_API_ENDPOINT + '/verify';\r\n    return axiosClient.post(url, email);\r\n  },\r\n\r\n  // fn: đăng ký\r\n  postSignUp: (account) => {\r\n    const url = ACCOUNT_API_ENDPOINT + '/signup';\r\n    return axiosClient.post(url, account);\r\n  },\r\n\r\n  // fn: gửi mã xác nhận lấy lại mật khẩu\r\n  postSendCodeForgotPW: (email) => {\r\n    const url = ACCOUNT_API_ENDPOINT + '/verify/forgot';\r\n    return axiosClient.post(url, email);\r\n  },\r\n\r\n  // fn: reset password\r\n  postResetPassword: (account) => {\r\n    const url = ACCOUNT_API_ENDPOINT + '/reset-pw';\r\n    return axiosClient.post(url, account);\r\n  },\r\n};\r\n\r\nexport default accountApi;\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\n\r\nDelay.propTypes = {\r\n  wait: PropTypes.number,\r\n};\r\n\r\nfunction Delay(props) {\r\n  const { wait } = props;\r\n  const [waiting, setWaiting] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setWaiting(false);\r\n    }, wait);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, []);\r\n\r\n  return waiting === true ? null : props.children;\r\n}\r\n\r\nexport default Delay;\r\n","// This icon file is generated automatically.\nvar EyeTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M81.8 537.8a60.3 60.3 0 010-51.5C176.6 286.5 319.8 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c-192.1 0-335.4-100.5-430.2-300.2z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 258c-161.3 0-279.4 81.8-362.7 254C232.6 684.2 350.7 766 512 766c161.4 0 279.5-81.8 362.7-254C791.4 339.8 673.3 258 512 258zm-4 430c-97.2 0-176-78.8-176-176s78.8-176 176-176 176 78.8 176 176-78.8 176-176 176z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258s279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766z\", \"fill\": primaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M508 336c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\", \"fill\": primaryColor } }] }; }, \"name\": \"eye\", \"theme\": \"twotone\" };\nexport default EyeTwoTone;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EyeTwoToneSvg from \"@ant-design/icons-svg/es/asn/EyeTwoTone\";\nimport AntdIcon from '../components/AntdIcon';\nvar EyeTwoTone = function EyeTwoTone(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EyeTwoToneSvg\n  }));\n};\nEyeTwoTone.displayName = 'EyeTwoTone';\nexport default /*#__PURE__*/React.forwardRef(EyeTwoTone);","import {\r\n  EyeInvisibleOutlined,\r\n  EyeTwoTone,\r\n  InfoCircleOutlined\r\n} from \"@ant-design/icons\";\r\nimport { Button, Col, message, Row, Tooltip } from \"antd\";\r\nimport accountApi from \"apis/accountApi\";\r\nimport InputField from \"components/Custom/InputField\";\r\nimport Delay from \"components/Delay\";\r\nimport constants from \"constants/index\";\r\nimport { FastField, Form, Formik } from \"formik\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport \"./ForgotPassword.scss\";\r\n\r\nfunction ForgotPassword() {\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  const [isSending, setIsSending] = useState(false);\r\n  const emailRef = useRef(\"\");\r\n\r\n  // fn: gửi mã xác nhận\r\n  const onSendCode = async () => {\r\n    try {\r\n      // kiểm tra email\r\n      const email = emailRef.current;\r\n      const regex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n\r\n      if (!regex.test(email)) {\r\n        message.error(\"Email không hợp lệ !\");\r\n        return;\r\n      }\r\n      // set loading, tránh việc gửi liên tục\r\n      setIsSending(true);\r\n\r\n      // tiến hành gửi mã\r\n      const result = await accountApi.postSendCodeForgotPW({ email });\r\n      if (result.status === 200) {\r\n        message.success(\"Gửi thành công, kiểm tra email\");\r\n        setIsSending(false);\r\n      }\r\n    } catch (error) {\r\n      setIsSending(false);\r\n      if (error.response) {\r\n        message.error(error.response.data.message);\r\n      } else {\r\n        message.error(\"Gửi thất bại, thử lại\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // fn: thay đổi mật khẩu\r\n  const onChangePassword = async (account) => {\r\n    try {\r\n      setIsSubmitting(true);\r\n      const result = await accountApi.postResetPassword({ account });\r\n      if (result.status === 200) {\r\n        setIsSubmitting(false);\r\n        setIsSuccess(true);\r\n        message.success(\"Thay đổi mật khẩu thành công.\");\r\n      }\r\n    } catch (error) {\r\n      setIsSubmitting(false);\r\n      if (error.response) {\r\n        message.error(error.response.data.message);\r\n      } else {\r\n        message.error(\"Cập nhật thất bại. Thử lại\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // giá trọ khởi tạo cho formik\r\n  const initialValue = {\r\n    email: \"\",\r\n    password: \"\",\r\n    verifyCode: \"\",\r\n  };\r\n\r\n  // validate form trước submit với yup\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .trim()\r\n      .required(\"* Email bạn là gì ?\")\r\n      .email(\"* Email không hợp lệ !\"),\r\n    password: Yup.string()\r\n    .trim()\r\n    .required(\"* Mật khẩu của bạn là gì ?\")\r\n    .min(6, \"* Mật khẩu ít nhất 6 ký tự\")\r\n    .max(20, \"* Mật khẩu tối đa 20 ký tự\")\r\n    .matches(\r\n      /^(?=.*[A-Z])(?=.*[~!@#%\\^&\\*()_\\+-=\\|\\\\,\\.\\/\\[\\]{}'\"`])(?=.*[0-9])(?=.*[a-z]).{6,}$/,\r\n      \"Mật khẩu chứa chữ Hoa,chữ thường, số\"\r\n    ),\r\n    verifyCode: Yup.string()\r\n      .trim()\r\n      .required(\"* Nhập mã xác nhận\")\r\n      .length(\r\n        constants.MAX_VERIFY_CODE,\r\n        `* Mã xác nhận có ${constants.MAX_VERIFY_CODE} ký tự`\r\n      ),\r\n  });\r\n\r\n  return (\r\n    <div className=\"ForgotPassword container\">\r\n      {/* chuyển về home khi đã login */}\r\n      {isSuccess && (\r\n        <Delay wait={constants.DELAY_TIME}>\r\n          <Redirect to={constants.ROUTES.LOGIN} />\r\n        </Delay>\r\n      )}\r\n\r\n      <h1 className=\"Login-title m-b-20 m-t-20 underline-title\">\r\n        <b>Thay đổi mật khẩu</b>\r\n      </h1>\r\n      <Formik\r\n        initialValues={initialValue}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onChangePassword}\r\n      >\r\n        {(formikProps) => {\r\n          emailRef.current = formikProps.values.email;\r\n          const suffixColor = \"rgba(0, 0, 0, 0.25)\";\r\n          return (\r\n            <Form className=\"bg-form\">\r\n              <Row\r\n                className=\"input-border p-l-20 p-r-20\"\r\n                gutter={[0, 24]}\r\n                justify=\"center\"\r\n                style={{ marginLeft: 0, marginRight: 0 }}\r\n\r\n              >\r\n                {/* Form thông tin đăng nhập */}\r\n                <Col span={24} className=\"m-t-20\">\r\n                  <FastField\r\n                    name=\"email\"\r\n                    component={InputField}\r\n                    className=\"input-form-common\"\r\n                    placeholder=\"Email *\"\r\n                    size=\"large\"\r\n                    suffix={\r\n                      <Tooltip title=\"Email của bạn \">\r\n                      <InfoCircleOutlined style={{ color: suffixColor }} />\r\n                    </Tooltip>\r\n                    }\r\n                  />\r\n                </Col>\r\n                <Col span={24}>\r\n                  <FastField\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    component={InputField}\r\n                    className=\"input-form-common\"\r\n                    placeholder=\"Mật khẩu mới *\"\r\n                    size=\"large\"\r\n                    autocomplete=\"on\"\r\n                    iconRender={(visible) =>\r\n                      visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\r\n                    }\r\n                  />\r\n                </Col>\r\n                <Col span={12}>\r\n                  {/* user name field */}\r\n                  <FastField\r\n                    name=\"verifyCode\"\r\n                    component={InputField}\r\n                    className=\"input-form-common\"\r\n                    placeholder=\"Mã xác nhận *\"\r\n                    size=\"large\"\r\n                    suffix={\r\n                      <Tooltip title=\"Click gửi mã để nhận mã qua email\">\r\n                        <InfoCircleOutlined style={{ color: suffixColor }} />\r\n                      </Tooltip>\r\n                    }\r\n                  />\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Button\r\n                    className=\"w-100 verify-btn\"\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    onClick={onSendCode}\r\n                    loading={isSending}\r\n                  >\r\n                    Gửi mã\r\n                  </Button>\r\n                </Col>\r\n\r\n                {/* Button submit */}\r\n                <Col className=\"p-t-8 m-b-20 t-center\" span={24}>\r\n                  <Button\r\n                    className=\"ForgotPW-submit-btn w-100\"\r\n                    size=\"large\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    loading={isSubmitting}\r\n                  >\r\n                    Thay đổi mật khẩu\r\n                  </Button>\r\n                  <div className=\"m-t-10\">\r\n                    Quay lại &nbsp;\r\n                    <Link to={constants.ROUTES.LOGIN}>Đăng nhập</Link>\r\n                    &nbsp; Hoặc &nbsp;\r\n                    <Link to={constants.ROUTES.SIGNUP}>Đăng ký</Link>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n"],"sourceRoot":""}